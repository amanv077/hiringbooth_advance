@import "tailwindcss";

/* Custom animations for loader */
@keyframes spin-reverse {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

.animate-spin-reverse {
  animation: spin-reverse 1s linear infinite;
}

:root {
  /* Light theme - background white, text black, blue secondary */
  --background: #ffffff;
  --foreground: #000000;
  --card: #ffffff;
  --card-foreground: #000000;
  --popover: #ffffff;
  --popover-foreground: #000000;
  --primary: #2563eb;
  --primary-foreground: #ffffff;
  --secondary: #f1f5f9;
  --secondary-foreground: #334155;
  --muted: #f8fafc;
  --muted-foreground: #64748b;
  --accent: #f1f5f9;
  --accent-foreground: #334155;
  --destructive: #ef4444;
  --destructive-foreground: #ffffff;
  --border: #e2e8f0;
  --input: #e2e8f0;
  --ring: #2563eb;
  --radius: 0.5rem;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --border-radius: var(--radius);
}

* {
  border-color: var(--border);
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: 'Inter', system-ui, -apple-system, sans-serif;
}

.hiringbooth-theme {
  --primary: #2563eb;
  --primary-hover: #1d4ed8;
  --primary-light: #dbeafe;
}

/* Background Patterns */
.bg-grid-pattern {
  background-image: 
    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Smooth Scrolling */
html {
  scroll-behavior: smooth;
}

/* Parallax Background Animations */
.parallax-bg {
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}

.parallax-cta {
  background-image: 
    linear-gradient(135deg, rgba(37, 99, 235, 0.9) 0%, rgba(147, 51, 234, 0.9) 100%),
    url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><pattern id="grid" width="50" height="50" patternUnits="userSpaceOnUse"><path d="M 50 0 L 0 0 0 50" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="1"/></pattern></defs><rect width="100%" height="100%" fill="url(%23grid)"/></svg>');
  background-attachment: fixed;
  background-position: center;
  background-size: cover, 50px 50px;
  min-height: 100vh;
  transform-style: preserve-3d;
}

.parallax-hero {
  background-image: 
    linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(99, 102, 241, 0.1) 100%),
    radial-gradient(circle at 25% 25%, rgba(59, 130, 246, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(99, 102, 241, 0.3) 0%, transparent 50%);
  background-attachment: fixed;
  background-position: center;
  background-size: cover;
  position: relative;
}

.parallax-features {
  background-image: 
    linear-gradient(45deg, rgba(245, 245, 245, 0.8) 0%, rgba(255, 255, 255, 0.9) 100%),
    url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(59,130,246,0.1)"/><circle cx="80" cy="80" r="2" fill="rgba(99,102,241,0.1)"/><circle cx="40" cy="60" r="1.5" fill="rgba(59,130,246,0.08)"/><circle cx="70" cy="30" r="1.5" fill="rgba(99,102,241,0.08)"/></svg>');
  background-attachment: fixed;
  background-position: center;
  background-size: cover, 100px 100px;
}

/* Scroll-triggered animations */
@keyframes slideInFromLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInFromRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.animate-slide-in-left {
  animation: slideInFromLeft 0.8s ease-out;
}

.animate-slide-in-right {
  animation: slideInFromRight 0.8s ease-out;
}

.animate-scale-in {
  animation: scaleIn 0.6s ease-out;
}

/* Parallax content wrapper */
.parallax-content {
  position: relative;
  z-index: 10;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
}

/* Floating elements animation */
@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-float-delayed {
  animation: float 6s ease-in-out infinite;
  animation-delay: -3s;
}

/* Custom Animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes spin-reverse {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out;
}

.animate-spin-reverse {
  animation: spin-reverse 1s linear infinite;
}

/* Button Hover Effects */
.hover-lift {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
}

/* Enhanced parallax effects */
.parallax-enhanced {
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
  will-change: background-position;
}

/* Gradient overlays for better text readability */
.gradient-overlay {
  position: relative;
}

.gradient-overlay::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0.3) 100%);
  pointer-events: none;
  z-index: 1;
}

.gradient-overlay > * {
  position: relative;
  z-index: 2;
}

/* Smooth transitions for all animations */
* {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Loading animation improvements */
.loading-spinner {
  background: conic-gradient(from 0deg, transparent, #3b82f6, transparent);
  border-radius: 50%;
  animation: spin 1.5s linear infinite;
  position: relative;
}

.loading-spinner::before {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  right: 2px;
  bottom: 2px;
  background: white;
  border-radius: 50%;
}

/* Text effects */
.text-glow {
  text-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
}

/* Card hover effects */
.card-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.card-hover:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

/* TipTap Editor Styles */
.ProseMirror {
  outline: none;
  border: none;
  padding: 12px;
  min-height: 120px;
}

.ProseMirror p {
  margin: 0.5rem 0;
}

.ProseMirror h1, .ProseMirror h2, .ProseMirror h3 {
  margin: 1rem 0 0.5rem 0;
  font-weight: bold;
}

.ProseMirror h1 {
  font-size: 1.5rem;
}

.ProseMirror h2 {
  font-size: 1.25rem;
}

.ProseMirror h3 {
  font-size: 1.125rem;
}

.ProseMirror ul, .ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.ProseMirror li {
  margin: 0.25rem 0;
}

.ProseMirror strong {
  font-weight: bold;
}

.ProseMirror em {
  font-style: italic;
}

.ProseMirror s {
  text-decoration: line-through;
}

.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #9ca3af;
  pointer-events: none;
  height: 0;
}

/* TipTap Editor Prose Styling */
.prose {
  max-width: none;
}

.prose h1 {
  font-size: 1.5rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  line-height: 1.2;
}

.prose h2 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  line-height: 1.3;
}

.prose h3 {
  font-size: 1.125rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  line-height: 1.4;
}

.prose p {
  margin-bottom: 0.75rem;
  line-height: 1.6;
}

.prose ul, .prose ol {
  margin-bottom: 0.75rem;
  padding-left: 1.5rem;
}

.prose ul li {
  list-style-type: disc;
  margin-bottom: 0.25rem;
}

.prose ol li {
  list-style-type: decimal;
  margin-bottom: 0.25rem;
}

.prose blockquote {
  border-left: 4px solid #e2e8f0;
  padding-left: 1rem;
  margin: 1rem 0;
  font-style: italic;
  color: #64748b;
}

.prose strong {
  font-weight: 600;
}

.prose em {
  font-style: italic;
}

.prose .ProseMirror {
  outline: none;
}

.prose .ProseMirror:focus {
  outline: none;
}

/* Mobile responsive utilities */
@layer utilities {
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  
  .line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
}

/* Ensure proper mobile viewport handling */
@viewport {
  width: device-width;
  initial-scale: 1;
  maximum-scale: 1;
  user-scalable: no;
}

/* Mobile-first responsive design helpers */
.mobile-container {
  @apply px-4 sm:px-6 lg:px-8 max-w-7xl mx-auto;
}

.mobile-section {
  @apply py-8 sm:py-12 lg:py-16;
}

.mobile-text {
  @apply text-sm sm:text-base;
}

.mobile-heading {
  @apply text-xl sm:text-2xl lg:text-3xl;
}

/* Toast container responsive positioning */
.toast-container {
  @apply fixed top-4 right-4 left-4 sm:left-auto sm:right-4 z-50;
}

/* Card hover effects */
.card-hover {
  @apply transition-all duration-200 hover:shadow-lg hover:scale-[1.02];
}

/* Button responsive sizes */
.btn-mobile {
  @apply px-4 py-2 text-sm sm:px-6 sm:py-3 sm:text-base;
}

/* Smooth scrolling for mobile */
html {
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
}

/* Better touch targets for mobile */
button, a, input, select, textarea {
  min-height: 44px;
  min-width: 44px;
}

/* Exception for checkboxes and radio buttons */
input[type="checkbox"], 
input[type="radio"] {
  min-height: auto;
  min-width: auto;
}

/* Prevent horizontal scroll on mobile */
body {
  overflow-x: hidden;
}

/* Mobile-friendly parallax adjustments */
@media (max-width: 768px) {
  .parallax-bg,
  .parallax-cta,
  .parallax-hero,
  .parallax-features {
    background-attachment: scroll;
  }
}

/* Enhanced scroll animations */
@keyframes parallaxFloat {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
  }
  25% {
    transform: translateY(-15px) translateX(10px);
  }
  50% {
    transform: translateY(-10px) translateX(-5px);
  }
  75% {
    transform: translateY(-20px) translateX(-10px);
  }
}

.animate-parallax-float {
  animation: parallaxFloat 8s ease-in-out infinite;
}

/* Intersection Observer triggered animations - Safer approach */
.scroll-animate {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

/* Only hide elements if JavaScript is enabled and observer is supported */
.js .scroll-animate:not(.in-view):not(.scroll-loaded) {
  opacity: 0;
  transform: translateY(20px);
}

.scroll-animate.in-view {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

/* Staggered animation delays */
.animate-delay-100 {
  animation-delay: 0.1s;
}

.animate-delay-200 {
  animation-delay: 0.2s;
}

.animate-delay-300 {
  animation-delay: 0.3s;
}

.animate-delay-400 {
  animation-delay: 0.4s;
}

/* Background pattern animations */
@keyframes backgroundShift {
  0% {
    background-position: 0% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}

.bg-animated-pattern {
  animation: backgroundShift 20s ease-in-out infinite;
}
